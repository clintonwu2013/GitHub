package model.POJO;
// Generated 2019�~5��13�� �U��12:01:30 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Activity generated by hbm2java
 */
@Entity
@Table(name = "activity", schema = "dbo", catalog = "final")
public class Activity implements java.io.Serializable {

	private Integer aid;
	private Member member;
	private String aname;
	private String acontent;
	private String atype;
	private Date beginTime;
	private Date endTime;
	private String address;
	private Integer peopleUplimit;
	private Integer accessPeople;
	private byte[] photo;
	private String permission;
	private Integer good;
	private String status;
	private Integer cost;
	private Date attendLimitTime;
	private Set<ActivityPhoto> activityPhotos = new HashSet<ActivityPhoto>(0);
	private Set<Calender> calenders = new HashSet<Calender>(0);
	private Set<ActivityArticle> activityArticles = new HashSet<ActivityArticle>(0);
	private Set<Attendant> attendants = new HashSet<Attendant>(0);
	private Set<Report> reports = new HashSet<Report>(0);
	private Set<ActivityMessage> activityMessages = new HashSet<ActivityMessage>(0);

	public Activity() {
	}

	public Activity(Member member, String aname, String acontent, String atype, Date beginTime, Date endTime,
			String address, Integer peopleUplimit, Integer accessPeople, byte[] photo, String permission, Integer good,
			String status, Integer cost, Date attendLimitTime, Set<ActivityPhoto> activityPhotos,
			Set<Calender> calenders, Set<ActivityArticle> activityArticles, Set<Attendant> attendants,
			Set<Report> reports, Set<ActivityMessage> activityMessages) {
		this.member = member;
		this.aname = aname;
		this.acontent = acontent;
		this.atype = atype;
		this.beginTime = beginTime;
		this.endTime = endTime;
		this.address = address;
		this.peopleUplimit = peopleUplimit;
		this.accessPeople = accessPeople;
		this.photo = photo;
		this.permission = permission;
		this.good = good;
		this.status = status;
		this.cost = cost;
		this.attendLimitTime = attendLimitTime;
		this.activityPhotos = activityPhotos;
		this.calenders = calenders;
		this.activityArticles = activityArticles;
		this.attendants = attendants;
		this.reports = reports;
		this.activityMessages = activityMessages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "aId", unique = true, nullable = false)
	public Integer getAid() {
		return this.aid;
	}

	public void setAid(Integer aid) {
		this.aid = aid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "email")
	public Member getMember() {
		return this.member;
	}

	public void setMember(Member member) {
		this.member = member;
	}

	@Column(name = "aName", length = 30)
	public String getAname() {
		return this.aname;
	}

	public void setAname(String aname) {
		this.aname = aname;
	}

	@Column(name = "aContent", length = 50)
	public String getAcontent() {
		return this.acontent;
	}

	public void setAcontent(String acontent) {
		this.acontent = acontent;
	}

	@Column(name = "aType", length = 20)
	public String getAtype() {
		return this.atype;
	}

	public void setAtype(String atype) {
		this.atype = atype;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "beginTime", length = 23)
	public Date getBeginTime() {
		return this.beginTime;
	}

	public void setBeginTime(Date beginTime) {
		this.beginTime = beginTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "endTime", length = 23)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "address", length = 50)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "peopleUplimit")
	public Integer getPeopleUplimit() {
		return this.peopleUplimit;
	}

	public void setPeopleUplimit(Integer peopleUplimit) {
		this.peopleUplimit = peopleUplimit;
	}

	@Column(name = "accessPeople")
	public Integer getAccessPeople() {
		return this.accessPeople;
	}

	public void setAccessPeople(Integer accessPeople) {
		this.accessPeople = accessPeople;
	}

	@Column(name = "photo")
	public byte[] getPhoto() {
		return this.photo;
	}

	public void setPhoto(byte[] photo) {
		this.photo = photo;
	}

	@Column(name = "permission", length = 10)
	public String getPermission() {
		return this.permission;
	}

	public void setPermission(String permission) {
		this.permission = permission;
	}

	@Column(name = "good")
	public Integer getGood() {
		return this.good;
	}

	public void setGood(Integer good) {
		this.good = good;
	}

	@Column(name = "status", length = 10)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "cost")
	public Integer getCost() {
		return this.cost;
	}

	public void setCost(Integer cost) {
		this.cost = cost;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "attendLimitTime", length = 23)
	public Date getAttendLimitTime() {
		return this.attendLimitTime;
	}

	public void setAttendLimitTime(Date attendLimitTime) {
		this.attendLimitTime = attendLimitTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<ActivityPhoto> getActivityPhotos() {
		return this.activityPhotos;
	}

	public void setActivityPhotos(Set<ActivityPhoto> activityPhotos) {
		this.activityPhotos = activityPhotos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<Calender> getCalenders() {
		return this.calenders;
	}

	public void setCalenders(Set<Calender> calenders) {
		this.calenders = calenders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<ActivityArticle> getActivityArticles() {
		return this.activityArticles;
	}

	public void setActivityArticles(Set<ActivityArticle> activityArticles) {
		this.activityArticles = activityArticles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<Attendant> getAttendants() {
		return this.attendants;
	}

	public void setAttendants(Set<Attendant> attendants) {
		this.attendants = attendants;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<Report> getReports() {
		return this.reports;
	}

	public void setReports(Set<Report> reports) {
		this.reports = reports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<ActivityMessage> getActivityMessages() {
		return this.activityMessages;
	}

	public void setActivityMessages(Set<ActivityMessage> activityMessages) {
		this.activityMessages = activityMessages;
	}

}
